"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Layouts = void 0;
const novu_interface_1 = require("../novu.interface");
class Layouts extends novu_interface_1.WithHttp {
    async create(data) {
        return await this.http.post(`/layouts`, {
            name: data.name,
            identifier: data.identifier,
            description: data.description,
            content: data.content,
            variables: data.variables,
            isDefault: data.isDefault,
        });
    }
    async list(data) {
        return await this.http.get(`/layouts`, {
            params: {
                ...(data?.page?.toString() && { page: data.page }),
                ...(data?.pageSize && { pageSize: data.pageSize }),
                ...(data?.sortBy && { sortBy: data.sortBy }),
                ...(data?.orderBy && { orderBy: data.orderBy }),
            },
        });
    }
    async get(layoutId) {
        return await this.http.get(`/layouts`, {
            params: {
                layoutId,
            },
        });
    }
    async delete(layoutId) {
        return await this.http.delete(`/layouts/${layoutId}`);
    }
    async update(layoutId, data) {
        return await this.http.patch(`/layouts/${layoutId}`, {
            ...(data.name && { name: data.name }),
            ...(data.identifier && { identifier: data.identifier }),
            ...(data.description && { description: data.description }),
            ...(data.content && { content: data.content }),
            ...(data.variables && { variables: data.variables }),
            ...(typeof data.isDefault === 'boolean' && {
                isDefault: data.isDefault,
            }),
        });
    }
    async setDefault(layoutId) {
        return await this.http.post(`/layouts/${layoutId}/default`);
    }
}
exports.Layouts = Layouts;
